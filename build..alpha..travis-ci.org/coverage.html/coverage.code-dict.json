{"/home/travis/build/npmtest/node-npmtest-arangojs/test.js":"/* istanbul instrument in package npmtest_arangojs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-arangojs/lib.npmtest_arangojs.js":"/* istanbul instrument in package npmtest_arangojs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_arangojs = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_arangojs = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-arangojs/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-arangojs && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_arangojs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_arangojs\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_arangojs.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_arangojs.rollup.js'] =\n            local.assetsDict['/assets.npmtest_arangojs.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_arangojs.__dirname + '/lib.npmtest_arangojs.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/index.js":"'use strict';\n\nvar _database = require('./database');\n\nvar _database2 = _interopRequireDefault(_database);\n\nvar _aqlQuery = require('./aql-query');\n\nvar _aqlQuery2 = _interopRequireDefault(_aqlQuery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new (Function.prototype.bind.apply(_database2.default, [null].concat(args)))();\n};\nmodule.exports.Database = _database2.default;\nmodule.exports.aqlQuery = module.exports.aql = _aqlQuery2.default;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/database.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _all = require('./util/all');\n\nvar _all2 = _interopRequireDefault(_all);\n\nvar _btoa = require('./util/btoa');\n\nvar _btoa2 = _interopRequireDefault(_btoa);\n\nvar _multipart = require('./util/multipart');\n\nvar _multipart2 = _interopRequireDefault(_multipart);\n\nvar _connection = require('./connection');\n\nvar _connection2 = _interopRequireDefault(_connection);\n\nvar _cursor = require('./cursor');\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nvar _graph = require('./graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _collection = require('./collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Database = function () {\n  function Database(config) {\n    _classCallCheck(this, Database);\n\n    this._connection = new _connection2.default(config);\n    this._api = this._connection.route('/_api');\n    this.name = this._connection.config.databaseName;\n  }\n\n  _createClass(Database, [{\n    key: 'route',\n    value: function route(path, headers) {\n      return this._connection.route(path, headers);\n    }\n\n    // Database manipulation\n\n  }, {\n    key: 'useDatabase',\n    value: function useDatabase(databaseName) {\n      if (this._connection.config.databaseName === false) {\n        throw new Error('Can not change database from absolute URL');\n      }\n      this._connection.config.databaseName = databaseName;\n      this._connection._databasePath = '/_db/' + databaseName;\n      this.name = databaseName;\n      return this;\n    }\n  }, {\n    key: 'useBearerAuth',\n    value: function useBearerAuth(token) {\n      this._connection.config.headers['authorization'] = 'Bearer ' + token;\n      return this;\n    }\n  }, {\n    key: 'useBasicAuth',\n    value: function useBasicAuth(username, password) {\n      this._connection.config.headers['authorization'] = 'Basic ' + (0, _btoa2.default)((username || 'root') + ':' + (password || ''));\n      return this;\n    }\n  }, {\n    key: 'get',\n    value: function get(cb) {\n      var _connection$promisify = this._connection.promisify(cb),\n          promise = _connection$promisify.promise,\n          callback = _connection$promisify.callback;\n\n      this._api.get('/database/current', function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createDatabase',\n    value: function createDatabase(databaseName, users, cb) {\n      if (typeof users === 'function') {\n        cb = users;\n        users = undefined;\n      }\n\n      var _connection$promisify2 = this._connection.promisify(cb),\n          promise = _connection$promisify2.promise,\n          callback = _connection$promisify2.callback;\n\n      this._api.post('/database', { users: users, name: databaseName }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'listDatabases',\n    value: function listDatabases(cb) {\n      var _connection$promisify3 = this._connection.promisify(cb),\n          promise = _connection$promisify3.promise,\n          callback = _connection$promisify3.callback;\n\n      this._api.get('/database', function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'listUserDatabases',\n    value: function listUserDatabases(cb) {\n      var _connection$promisify4 = this._connection.promisify(cb),\n          promise = _connection$promisify4.promise,\n          callback = _connection$promisify4.callback;\n\n      this._api.get('/database/user', function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'dropDatabase',\n    value: function dropDatabase(databaseName, cb) {\n      var _connection$promisify5 = this._connection.promisify(cb),\n          promise = _connection$promisify5.promise,\n          callback = _connection$promisify5.callback;\n\n      this._api.delete('/database/' + databaseName, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n\n    // Collection manipulation\n\n  }, {\n    key: 'collection',\n    value: function collection(collectionName) {\n      return new _collection.DocumentCollection(this._connection, collectionName);\n    }\n  }, {\n    key: 'edgeCollection',\n    value: function edgeCollection(collectionName) {\n      return new _collection.EdgeCollection(this._connection, collectionName);\n    }\n  }, {\n    key: 'listCollections',\n    value: function listCollections(excludeSystem, cb) {\n      if (typeof excludeSystem === 'function') {\n        cb = excludeSystem;\n        excludeSystem = undefined;\n      }\n\n      var _connection$promisify6 = this._connection.promisify(cb),\n          promise = _connection$promisify6.promise,\n          callback = _connection$promisify6.callback;\n\n      if (typeof excludeSystem !== 'boolean') excludeSystem = true;\n      var resultField = this._connection.arangoMajor < 3 ? 'collections' : 'result';\n      this._api.get('/collection', { excludeSystem: excludeSystem }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body[resultField]);\n      });\n      return promise;\n    }\n  }, {\n    key: 'collections',\n    value: function collections(excludeSystem, cb) {\n      var _this = this;\n\n      if (typeof excludeSystem === 'function') {\n        cb = excludeSystem;\n        excludeSystem = undefined;\n      }\n\n      var _connection$promisify7 = this._connection.promisify(cb),\n          promise = _connection$promisify7.promise,\n          callback = _connection$promisify7.callback;\n\n      this.listCollections(excludeSystem, function (err, collections) {\n        return err ? callback(err) : callback(null, collections.map(function (info) {\n          return (0, _collection2.default)(_this._connection, info);\n        }));\n      });\n      return promise;\n    }\n  }, {\n    key: 'truncate',\n    value: function truncate(excludeSystem, cb) {\n      var _this2 = this;\n\n      if (typeof excludeSystem === 'function') {\n        cb = excludeSystem;\n        excludeSystem = undefined;\n      }\n\n      var _connection$promisify8 = this._connection.promisify(cb),\n          promise = _connection$promisify8.promise,\n          callback = _connection$promisify8.callback;\n\n      this.listCollections(excludeSystem, function (err, collections) {\n        return err ? callback(err) : (0, _all2.default)(collections.map(function (data) {\n          return function (cb) {\n            return _this2._api.put('/collection/' + data.name + '/truncate', function (err, res) {\n              return err ? cb(err) : cb(null, res.body);\n            });\n          };\n        }), callback);\n      });\n      return promise;\n    }\n\n    // Graph manipulation\n\n  }, {\n    key: 'graph',\n    value: function graph(graphName) {\n      return new _graph2.default(this._connection, graphName);\n    }\n  }, {\n    key: 'listGraphs',\n    value: function listGraphs(cb) {\n      var _connection$promisify9 = this._connection.promisify(cb),\n          promise = _connection$promisify9.promise,\n          callback = _connection$promisify9.callback;\n\n      this._api.get('/gharial', function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graphs);\n      });\n      return promise;\n    }\n  }, {\n    key: 'graphs',\n    value: function graphs(cb) {\n      var _this3 = this;\n\n      var _connection$promisify10 = this._connection.promisify(cb),\n          promise = _connection$promisify10.promise,\n          callback = _connection$promisify10.callback;\n\n      this.listGraphs(function (err, graphs) {\n        return err ? callback(err) : callback(null, graphs.map(function (info) {\n          return _this3.graph(info._key);\n        }));\n      });\n      return promise;\n    }\n\n    // Queries\n\n  }, {\n    key: 'transaction',\n    value: function transaction(collections, action, params, lockTimeout, cb) {\n      if (typeof lockTimeout === 'function') {\n        cb = lockTimeout;\n        lockTimeout = undefined;\n      }\n      if (typeof params === 'function') {\n        cb = params;\n        params = undefined;\n      }\n      if (typeof params === 'number') {\n        lockTimeout = params;\n        params = undefined;\n      }\n      if (typeof collections === 'string' || Array.isArray(collections)) {\n        collections = { write: collections };\n      }\n\n      var _connection$promisify11 = this._connection.promisify(cb),\n          promise = _connection$promisify11.promise,\n          callback = _connection$promisify11.callback;\n\n      this._api.post('/transaction', { collections: collections, action: action, params: params, lockTimeout: lockTimeout }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'query',\n    value: function query(_query, bindVars, opts, cb) {\n      var _this4 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof bindVars === 'function') {\n        cb = bindVars;\n        bindVars = undefined;\n      }\n\n      var _connection$promisify12 = this._connection.promisify(cb),\n          promise = _connection$promisify12.promise,\n          callback = _connection$promisify12.callback;\n\n      if (_query && _query.query) {\n        if (!opts) opts = bindVars;\n        bindVars = _query.bindVars;\n        _query = _query.query;\n      }\n      if (_query && typeof _query.toAQL === 'function') {\n        _query = _query.toAQL();\n      }\n      this._api.post('/cursor', _extends({}, opts, { query: _query, bindVars: bindVars }), function (err, res) {\n        return err ? callback(err) : callback(null, new _cursor2.default(_this4._connection, res.body));\n      });\n      return promise;\n    }\n\n    // Function management\n\n  }, {\n    key: 'listFunctions',\n    value: function listFunctions(cb) {\n      var _connection$promisify13 = this._connection.promisify(cb),\n          promise = _connection$promisify13.promise,\n          callback = _connection$promisify13.callback;\n\n      this._api.get('/aqlfunction', function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createFunction',\n    value: function createFunction(name, code, cb) {\n      var _connection$promisify14 = this._connection.promisify(cb),\n          promise = _connection$promisify14.promise,\n          callback = _connection$promisify14.callback;\n\n      this._api.post('/aqlfunction', { name: name, code: code }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'dropFunction',\n    value: function dropFunction(name, group, cb) {\n      if (typeof group === 'function') {\n        cb = group;\n        group = undefined;\n      }\n\n      var _connection$promisify15 = this._connection.promisify(cb),\n          promise = _connection$promisify15.promise,\n          callback = _connection$promisify15.callback;\n\n      this._api.delete('/aqlfunction/' + name, { group: Boolean(group) }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n\n    // Service management\n\n  }, {\n    key: 'listServices',\n    value: function listServices(cb) {\n      var _connection$promisify16 = this._connection.promisify(cb),\n          promise = _connection$promisify16.promise,\n          callback = _connection$promisify16.callback;\n\n      this._api.get('/foxx', function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'installService',\n    value: function installService(mount, source, opts, cb) {\n      var _this5 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _ref = opts || {},\n          configuration = _ref.configuration,\n          dependencies = _ref.dependencies,\n          qs = _objectWithoutProperties(_ref, ['configuration', 'dependencies']);\n\n      var _connection$promisify17 = this._connection.promisify(cb),\n          promise = _connection$promisify17.promise,\n          callback = _connection$promisify17.callback;\n\n      (0, _multipart2.default)({\n        configuration: configuration,\n        dependencies: dependencies,\n        source: source\n      }, function (err, req) {\n        return err ? callback(err) : _this5._api.request({\n          method: 'POST',\n          path: '/foxx',\n          rawBody: req.body,\n          qs: _extends({}, qs, { mount: mount }),\n          headers: req.headers\n        }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      });\n      return promise;\n    }\n  }, {\n    key: 'upgradeService',\n    value: function upgradeService(mount, source, opts, cb) {\n      var _this6 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _ref2 = opts || {},\n          configuration = _ref2.configuration,\n          dependencies = _ref2.dependencies,\n          qs = _objectWithoutProperties(_ref2, ['configuration', 'dependencies']);\n\n      var _connection$promisify18 = this._connection.promisify(cb),\n          promise = _connection$promisify18.promise,\n          callback = _connection$promisify18.callback;\n\n      (0, _multipart2.default)({\n        configuration: configuration,\n        dependencies: dependencies,\n        source: source\n      }, function (err, req) {\n        return err ? callback(err) : _this6._api.request({\n          method: 'PATCH',\n          path: '/foxx/service',\n          rawBody: req.body,\n          qs: _extends({}, qs, { mount: mount }),\n          headers: req.headers\n        }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      });\n      return promise;\n    }\n  }, {\n    key: 'replaceService',\n    value: function replaceService(mount, source, opts, cb) {\n      var _this7 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _ref3 = opts || {},\n          configuration = _ref3.configuration,\n          dependencies = _ref3.dependencies,\n          qs = _objectWithoutProperties(_ref3, ['configuration', 'dependencies']);\n\n      var _connection$promisify19 = this._connection.promisify(cb),\n          promise = _connection$promisify19.promise,\n          callback = _connection$promisify19.callback;\n\n      (0, _multipart2.default)({\n        configuration: configuration,\n        dependencies: dependencies,\n        source: source\n      }, function (err, req) {\n        return err ? callback(err) : _this7._api.request({\n          method: 'PUT',\n          path: '/foxx/service',\n          rawBody: req.body,\n          qs: _extends({}, qs, { mount: mount }),\n          headers: req.headers\n        }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      });\n      return promise;\n    }\n  }, {\n    key: 'uninstallService',\n    value: function uninstallService(mount, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify20 = this._connection.promisify(cb),\n          promise = _connection$promisify20.promise,\n          callback = _connection$promisify20.callback;\n\n      this._api.delete('/foxx/service', _extends({}, opts, { mount: mount }), function (err) {\n        return err ? callback(err) : callback(null);\n      });\n      return promise;\n    }\n  }, {\n    key: 'getService',\n    value: function getService(mount, cb) {\n      var _connection$promisify21 = this._connection.promisify(cb),\n          promise = _connection$promisify21.promise,\n          callback = _connection$promisify21.callback;\n\n      this._api.get('/foxx/service', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'getServiceConfiguration',\n    value: function getServiceConfiguration(mount, cb) {\n      var _connection$promisify22 = this._connection.promisify(cb),\n          promise = _connection$promisify22.promise,\n          callback = _connection$promisify22.callback;\n\n      this._api.get('/foxx/configuration', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'updateServiceConfiguration',\n    value: function updateServiceConfiguration(mount, cfg, cb) {\n      var _connection$promisify23 = this._connection.promisify(cb),\n          promise = _connection$promisify23.promise,\n          callback = _connection$promisify23.callback;\n\n      this._api.patch('/foxx/configuration', cfg, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'replaceServiceConfiguration',\n    value: function replaceServiceConfiguration(mount, cfg, cb) {\n      var _connection$promisify24 = this._connection.promisify(cb),\n          promise = _connection$promisify24.promise,\n          callback = _connection$promisify24.callback;\n\n      this._api.put('/foxx/configuration', cfg, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'getServiceDependencies',\n    value: function getServiceDependencies(mount, cb) {\n      var _connection$promisify25 = this._connection.promisify(cb),\n          promise = _connection$promisify25.promise,\n          callback = _connection$promisify25.callback;\n\n      this._api.get('/foxx/dependencies', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'updateServiceDependencies',\n    value: function updateServiceDependencies(mount, cfg, cb) {\n      var _connection$promisify26 = this._connection.promisify(cb),\n          promise = _connection$promisify26.promise,\n          callback = _connection$promisify26.callback;\n\n      this._api.patch('/foxx/dependencies', cfg, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'replaceServiceDependencies',\n    value: function replaceServiceDependencies(mount, cfg, cb) {\n      var _connection$promisify27 = this._connection.promisify(cb),\n          promise = _connection$promisify27.promise,\n          callback = _connection$promisify27.callback;\n\n      this._api.put('/foxx/dependencies', cfg, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'enableServiceDevelopmentMode',\n    value: function enableServiceDevelopmentMode(mount, cb) {\n      var _connection$promisify28 = this._connection.promisify(cb),\n          promise = _connection$promisify28.promise,\n          callback = _connection$promisify28.callback;\n\n      this._api.post('/foxx/development', undefined, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'disableServiceDevelopmentMode',\n    value: function disableServiceDevelopmentMode(mount, cb) {\n      var _connection$promisify29 = this._connection.promisify(cb),\n          promise = _connection$promisify29.promise,\n          callback = _connection$promisify29.callback;\n\n      this._api.delete('/foxx/development', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'listServiceScripts',\n    value: function listServiceScripts(mount, cb) {\n      var _connection$promisify30 = this._connection.promisify(cb),\n          promise = _connection$promisify30.promise,\n          callback = _connection$promisify30.callback;\n\n      this._api.get('/foxx/scripts', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'runServiceScript',\n    value: function runServiceScript(mount, name, args, cb) {\n      if (typeof args === 'function') {\n        cb = args;\n        args = undefined;\n      }\n\n      var _connection$promisify31 = this._connection.promisify(cb),\n          promise = _connection$promisify31.promise,\n          callback = _connection$promisify31.callback;\n\n      this._api.post('/foxx/scripts/' + name, args, { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'runServiceTests',\n    value: function runServiceTests(mount, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify32 = this._connection.promisify(cb),\n          promise = _connection$promisify32.promise,\n          callback = _connection$promisify32.callback;\n\n      this._api.post('/foxx/tests', undefined, _extends({}, opts, { mount: mount }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'getServiceReadme',\n    value: function getServiceReadme(mount, cb) {\n      var _connection$promisify33 = this._connection.promisify(cb),\n          promise = _connection$promisify33.promise,\n          callback = _connection$promisify33.callback;\n\n      this._api.get('/foxx/readme', { mount: mount }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'downloadService',\n    value: function downloadService(mount, cb) {\n      var _connection$promisify34 = this._connection.promisify(cb),\n          promise = _connection$promisify34.promise,\n          callback = _connection$promisify34.callback;\n\n      this._api.request({ method: 'POST', path: '/foxx/download', qs: { mount: mount }, expectBinary: true }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }]);\n\n  return Database;\n}();\n\nexports.default = Database;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/all.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\nfunction all(arr, callback) {\n  var result = [];\n  var pending = arr.length;\n  var called = false;\n\n  if (arr.length === 0) return callback(null, result);\n\n  var step = function step(i) {\n    return function (err, res) {\n      pending -= 1;\n      if (!err) result[i] = res;\n      if (!called) {\n        if (err) callback(err);else if (pending === 0) {\n          if (result.every(function (r) {\n            return r === undefined;\n          })) callback(null);else callback(null, result);\n        } else return;\n        called = true;\n      }\n    };\n  };\n\n  arr.forEach(function (fn, i) {\n    return fn(step(i));\n  });\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/btoa.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (str) {\n  return Buffer.from(str).toString('base64');\n};","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/multipart.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = toForm;\n\nvar _multiPart = require('multi-part');\n\nvar _multiPart2 = _interopRequireDefault(_multiPart);\n\nvar _stream = require('stream');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toForm(fields, callback) {\n  var called = false;\n  try {\n    var form = new _multiPart2.default();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(fields)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        var value = fields[key];\n        if (value === undefined) continue;\n        if (!(value instanceof _stream.Readable) && !(value instanceof global.Buffer) && ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'function')) {\n          value = JSON.stringify(value);\n        }\n        form.append(key, value);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var stream = form.getStream();\n    var bufs = [];\n    stream.on('data', function (buf) {\n      return bufs.push(buf);\n    });\n    stream.on('end', function () {\n      if (called) return;\n      bufs.push(Buffer.from('\\r\\n'));\n      var body = Buffer.concat(bufs);\n      var boundary = form.getBoundary();\n      var headers = {\n        'content-type': 'multipart/form-data; boundary=' + boundary,\n        'content-length': String(body.length)\n      };\n      called = true;\n      callback(null, { body: body, headers: headers });\n    });\n    stream.on('error', function (e) {\n      if (called) return;\n      called = true;\n      callback(e);\n    });\n  } catch (e) {\n    if (called) return;\n    called = true;\n    callback(e);\n  }\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/connection.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _httpErrors = require('http-errors');\n\nvar _httpErrors2 = _interopRequireDefault(_httpErrors);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _btoa = require('./util/btoa');\n\nvar _btoa2 = _interopRequireDefault(_btoa);\n\nvar _bytelength = require('./util/bytelength');\n\nvar _bytelength2 = _interopRequireDefault(_bytelength);\n\nvar _promisify2 = require('./util/promisify');\n\nvar _promisify3 = _interopRequireDefault(_promisify2);\n\nvar _request = require('./util/request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _error = require('./error');\n\nvar _error2 = _interopRequireDefault(_error);\n\nvar _route = require('./route');\n\nvar _route2 = _interopRequireDefault(_route);\n\nvar _retry = require('retry');\n\nvar _retry2 = _interopRequireDefault(_retry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MIME_JSON = /\\/(json|javascript)(\\W|$)/;\n\nvar Connection = function () {\n  function Connection(config) {\n    _classCallCheck(this, Connection);\n\n    if (typeof config === 'string') {\n      config = { url: config };\n    }\n    this.config = _extends({}, Connection.defaults, config);\n    this.config.agentOptions = _extends({}, Connection.agentDefaults, this.config.agentOptions);\n    if (!this.config.headers) this.config.headers = {};\n    if (!this.config.headers['x-arango-version']) {\n      this.config.headers['x-arango-version'] = this.config.arangoVersion;\n    }\n    this.arangoMajor = Math.floor(this.config.arangoVersion / 10000);\n\n    var _createRequest = (0, _request2.default)(this.config.url, this.config.agentOptions, this.config.agent),\n        request = _createRequest.request,\n        auth = _createRequest.auth,\n        url = _createRequest.url;\n\n    this._baseUrl = url;\n    this._request = request;\n    if (auth && !this.config.headers['authorization']) {\n      this.config.headers['authorization'] = 'Basic ' + (0, _btoa2.default)(auth);\n    }\n    if (this.config.databaseName === false) {\n      this._databasePath = '';\n    } else {\n      this._databasePath = '/_db/' + this.config.databaseName;\n    }\n    this.promisify = (0, _promisify3.default)(this.config.promise);\n    this.retryOptions = {\n      forever: this.config.retryConnection,\n      retries: 0,\n      minTimeout: 5000,\n      randomize: true\n    };\n  }\n\n  _createClass(Connection, [{\n    key: '_buildUrl',\n    value: function _buildUrl(opts) {\n      var pathname = '';\n      var search = void 0;\n      if (!opts.absolutePath) {\n        pathname = this._databasePath;\n        if (opts.basePath) pathname += opts.basePath;\n      }\n      if (opts.path) pathname += opts.path;\n      if (opts.qs) {\n        if (typeof opts.qs === 'string') search = '?' + opts.qs;else search = '?' + _querystring2.default.stringify(opts.qs);\n      }\n      return search ? { pathname: pathname, search: search } : { pathname: pathname };\n    }\n  }, {\n    key: 'route',\n    value: function route(path, headers) {\n      return new _route2.default(this, path, headers);\n    }\n  }, {\n    key: 'request',\n    value: function request(opts, cb) {\n      var _promisify = this.promisify(cb),\n          promise = _promisify.promise,\n          callback = _promisify.callback;\n\n      var expectBinary = opts.expectBinary || false;\n      var contentType = 'text/plain';\n      var body = opts.body;\n\n      if (body) {\n        if ((typeof body === 'undefined' ? 'undefined' : _typeof(body)) === 'object') {\n          if (opts.ld) {\n            body = body.map(function (obj) {\n              return JSON.stringify(obj);\n            }).join('\\r\\n') + '\\r\\n';\n            contentType = 'application/x-ldjson';\n          } else {\n            body = JSON.stringify(body);\n            contentType = 'application/json';\n          }\n        } else {\n          body = String(body);\n        }\n      } else {\n        body = opts.rawBody;\n      }\n\n      if (!opts.headers.hasOwnProperty('content-type')) {\n        opts.headers['content-type'] = contentType;\n      }\n\n      if (typeof window === 'undefined' && !opts.headers.hasOwnProperty('content-length')) {\n        opts.headers['content-length'] = body ? (0, _bytelength2.default)(body, 'utf-8') : 0;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(this.config.headers)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          if (!opts.headers.hasOwnProperty(key)) {\n            opts.headers[key] = this.config.headers[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var url = this._buildUrl(opts);\n      var doRequest = this._request;\n      var operation = _retry2.default.operation(this.retryOptions);\n      operation.attempt(function (currentAttempt) {\n        doRequest({\n          url: url,\n          headers: opts.headers,\n          method: opts.method,\n          expectBinary: expectBinary,\n          body: body\n        }, function (err, res) {\n          if (operation.retry(err)) return;\n          if (err) callback(err);else {\n            var rawBody = res.body;\n            if (res.headers['content-type'].match(MIME_JSON)) {\n              try {\n                if (expectBinary) res.body = res.body.toString('utf-8');\n                res.body = res.body ? JSON.parse(res.body) : undefined;\n              } catch (e) {\n                res.body = rawBody;\n                e.response = res;\n                return callback(e);\n              }\n            }\n            if (res.body && res.body.error && res.body.hasOwnProperty('code') && res.body.hasOwnProperty('errorMessage') && res.body.hasOwnProperty('errorNum')) {\n              err = new _error2.default(res.body);\n              err.response = res;\n              if (currentAttempt === 1 && err.errorNum === 21 && operation.retry(err)) return;\n              callback(err);\n            } else if (res.statusCode >= 400) {\n              err = (0, _httpErrors2.default)(res.statusCode);\n              err.response = res;\n              if (currentAttempt === 1 && res.statusCode === 500 && operation.retry(err)) return;\n              callback(err);\n            } else {\n              if (expectBinary) res.body = rawBody;\n              callback(null, res);\n            }\n          }\n        });\n      });\n      return promise;\n    }\n  }]);\n\n  return Connection;\n}();\n\nexports.default = Connection;\n\n\nConnection.defaults = {\n  url: 'http://localhost:8529',\n  databaseName: '_system',\n  arangoVersion: 30000,\n  retryConnection: false\n};\n\nConnection.agentDefaults = {\n  maxSockets: 3,\n  keepAlive: true,\n  keepAliveMsecs: 1000\n};","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/bytelength.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Buffer.byteLength;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/promisify.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = promisify;\nvar noop = function noop() {\n  return undefined;\n};\n\nfunction promisify(promiseClass) {\n  if (promiseClass === false) {\n    return function (cb) {\n      return { callback: cb || noop };\n    };\n  }\n\n  return function (cb) {\n    var Promise = promiseClass || global.Promise;\n\n    if (cb || !Promise) {\n      return { callback: cb || noop };\n    }\n\n    var callback = void 0;\n    var promise = new Promise(function (resolve, reject) {\n      callback = function callback(err, res) {\n        if (err) reject(err);else resolve(res);\n      };\n    });\n\n    return { callback: callback, promise: promise };\n  };\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/request.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (baseUrl, agentOptions, agent) {\n  var baseUrlParts = (0, _url.parse)(baseUrl);\n  var isTls = baseUrlParts.protocol === 'https:';\n\n  if (!agent) {\n    var Agent = (isTls ? _https2.default : _http2.default).Agent;\n    agent = new Agent(agentOptions);\n  }\n\n  var queue = new _linkedlist2.default();\n  var maxTasks = typeof agent.maxSockets === 'number' ? agent.maxSockets * 2 : Infinity;\n  var activeTasks = 0;\n\n  function drainQueue() {\n    if (!queue.length || activeTasks >= maxTasks) return;\n    var task = queue.shift();\n    activeTasks += 1;\n    task(function () {\n      activeTasks -= 1;\n      drainQueue();\n    });\n  }\n\n  function request(_ref, cb) {\n    var method = _ref.method,\n        url = _ref.url,\n        headers = _ref.headers,\n        body = _ref.body,\n        expectBinary = _ref.expectBinary;\n\n    var path = baseUrlParts.pathname ? url.pathname ? joinPath(baseUrlParts.pathname, url.pathname) : baseUrlParts.pathname : url.pathname;\n    var search = url.search ? baseUrlParts.search ? baseUrlParts.search + '&' + url.search.slice(1) : url.search : baseUrlParts.search;\n    if (search) path += search;\n    var options = { path: path, method: method, headers: headers, agent: agent };\n    options.hostname = baseUrlParts.hostname;\n    options.port = baseUrlParts.port;\n    options.auth = baseUrlParts.auth;\n\n    queue.push(function (next) {\n      var _callback = function callback(err, res) {\n        _callback = function callback() {\n          return undefined;\n        };\n        next();\n        cb(err, res);\n      };\n      var req = (isTls ? _https2.default : _http2.default).request(options, function (res) {\n        var data = [];\n        res.on('data', function (chunk) {\n          return data.push(chunk);\n        }).on('end', function () {\n          res.body = Buffer.concat(data);\n          if (!expectBinary) {\n            res.body = res.body.toString('utf-8');\n          }\n          _callback(null, res);\n        });\n      });\n      req.on('error', function (err) {\n        err.request = req;\n        _callback(err);\n      });\n      if (body) req.write(body);\n      req.end();\n    });\n\n    drainQueue();\n  }\n\n  var auth = baseUrlParts.auth;\n  delete baseUrlParts.auth;\n  return { request: request, auth: auth, url: baseUrlParts };\n};\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _https = require('https');\n\nvar _https2 = _interopRequireDefault(_https);\n\nvar _url = require('url');\n\nvar _linkedlist = require('linkedlist');\n\nvar _linkedlist2 = _interopRequireDefault(_linkedlist);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction joinPath() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!a && !b) return '';\n  var leadingSlash = a.charAt(0) === '/';\n  var trailingSlash = b.charAt(b.length - 1) === '/';\n  var tokens = (a + '/' + b).split('/').filter(Boolean);\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    if (token === '..') {\n      tokens.splice(i - 1, 2);\n      i--;\n    } else if (token === '.') {\n      tokens.splice(i, 1);\n      i--;\n    }\n  }\n  var path = tokens.join('/');\n  if (leadingSlash) path = '/' + path;\n  if (trailingSlash) path = path + '/';\n  return path;\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/error.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _es6Error = require('es6-error');\n\nvar _es6Error2 = _interopRequireDefault(_es6Error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ArangoError = function (_ExtendableError) {\n  _inherits(ArangoError, _ExtendableError);\n\n  function ArangoError(obj) {\n    _classCallCheck(this, ArangoError);\n\n    var _this = _possibleConstructorReturn(this, (ArangoError.__proto__ || Object.getPrototypeOf(ArangoError)).call(this));\n\n    _this.message = obj.errorMessage;\n    _this.errorNum = obj.errorNum;\n    _this.code = obj.code;\n    var err = new Error(_this.message);\n    err.name = _this.name;\n    if (err.fileName) _this.fileName = err.fileName;\n    if (err.lineNumber) _this.lineNumber = err.lineNumber;\n    if (err.columnNumber) _this.columnNumber = err.columnNumber;\n    if (err.stack) _this.stack = err.stack;\n    if (err.description) _this.description = err.description;\n    if (err.number) _this.number = err.number;\n    return _this;\n  }\n\n  return ArangoError;\n}(_es6Error2.default);\n\nexports.default = ArangoError;\n\n\nArangoError.prototype.name = 'ArangoError';\nArangoError.prototype.isArangoError = true;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/route.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Route = function () {\n  function Route(connection, path, headers) {\n    _classCallCheck(this, Route);\n\n    if (!path) path = '';else if (path.charAt(0) !== '/') path = '/' + path;\n    this._connection = connection;\n    this._path = path;\n    this._headers = headers;\n  }\n\n  _createClass(Route, [{\n    key: 'route',\n    value: function route(path, headers) {\n      if (!path) path = '';else if (path.charAt(0) !== '/') path = '/' + path;\n      return new Route(this._connection, this._path + path, _extends({}, this._headers, headers));\n    }\n  }, {\n    key: 'request',\n    value: function request(opts, callback) {\n      opts = _extends({}, opts);\n      opts.basePath = this._path;\n      opts.headers = _extends({}, this._headers, opts.headers);\n      opts.method = opts.method ? opts.method.toUpperCase() : 'GET';\n      return this._connection.request(opts, callback);\n    }\n  }, {\n    key: 'get',\n    value: function get(path, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = qs;\n        qs = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        qs: qs,\n        headers: headers,\n        method: 'GET'\n      }, callback);\n    }\n  }, {\n    key: 'post',\n    value: function post(path, body, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = qs;\n        qs = body;\n        body = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof body === 'function') {\n        callback = body;\n        body = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        body: body,\n        qs: qs,\n        headers: headers,\n        method: 'POST'\n      }, callback);\n    }\n  }, {\n    key: 'put',\n    value: function put(path, body, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = body;\n        body = qs;\n        qs = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof body === 'function') {\n        callback = body;\n        body = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        body: body,\n        qs: qs,\n        headers: headers,\n        method: 'PUT'\n      }, callback);\n    }\n  }, {\n    key: 'patch',\n    value: function patch(path, body, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = body;\n        body = qs;\n        qs = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof body === 'function') {\n        callback = body;\n        body = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        body: body,\n        qs: qs,\n        headers: headers,\n        method: 'PATCH'\n      }, callback);\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(path, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = qs;\n        qs = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        qs: qs,\n        headers: headers,\n        method: 'DELETE'\n      }, callback);\n    }\n  }, {\n    key: 'head',\n    value: function head(path, qs, headers, callback) {\n      if (typeof path !== 'string') {\n        callback = qs;\n        qs = path;\n        path = undefined;\n      }\n      if (typeof qs === 'function') {\n        callback = qs;\n        qs = undefined;\n      }\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = undefined;\n      }\n      if (!path) path = '';else if (this._path && path.charAt(0) !== '/') path = '/' + path;\n      headers = headers ? _extends({}, this._headers, headers) : _extends({}, this._headers);\n      return this._connection.request({\n        basePath: this._path,\n        path: path,\n        qs: qs,\n        headers: headers,\n        method: 'HEAD'\n      }, callback);\n    }\n  }]);\n\n  return Route;\n}();\n\nexports.default = Route;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/cursor.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ArrayCursor = function () {\n  function ArrayCursor(connection, body) {\n    _classCallCheck(this, ArrayCursor);\n\n    this.extra = body.extra;\n    this._connection = connection;\n    this._api = this._connection.route('/_api');\n    this._result = body.result;\n    this._hasMore = Boolean(body.hasMore);\n    this._id = body.id;\n    this.count = body.count;\n  }\n\n  _createClass(ArrayCursor, [{\n    key: '_drain',\n    value: function _drain(cb) {\n      var _this = this;\n\n      var _connection$promisify = this._connection.promisify(cb),\n          promise = _connection$promisify.promise,\n          callback = _connection$promisify.callback;\n\n      this._more(function (err) {\n        return err ? callback(err) : !_this._hasMore ? callback(null, _this) : _this._drain(cb);\n      });\n      return promise;\n    }\n  }, {\n    key: '_more',\n    value: function _more(callback) {\n      var _this2 = this;\n\n      if (!this._hasMore) callback(null, this);else {\n        this._api.put('/cursor/' + this._id, function (err, res) {\n          if (err) callback(err);else {\n            var _result;\n\n            (_result = _this2._result).push.apply(_result, _toConsumableArray(res.body.result));\n            _this2._hasMore = res.body.hasMore;\n            callback(null, _this2);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'all',\n    value: function all(cb) {\n      var _this3 = this;\n\n      var _connection$promisify2 = this._connection.promisify(cb),\n          promise = _connection$promisify2.promise,\n          callback = _connection$promisify2.callback;\n\n      this._drain(function (err) {\n        if (err) callback(err);else {\n          var result = _this3._result;\n          _this3._result = [];\n          callback(null, result);\n        }\n      });\n      return promise;\n    }\n  }, {\n    key: 'next',\n    value: function next(cb) {\n      var _this4 = this;\n\n      var _connection$promisify3 = this._connection.promisify(cb),\n          promise = _connection$promisify3.promise,\n          callback = _connection$promisify3.callback;\n\n      var next = function next() {\n        var value = _this4._result.shift();\n        callback(null, value);\n      };\n      if (this._result.length) next();else {\n        if (!this._hasMore) callback(null);else {\n          this._more(function (err) {\n            return err ? callback(err) : next();\n          });\n        }\n      }\n      return promise;\n    }\n  }, {\n    key: 'hasNext',\n    value: function hasNext() {\n      return Boolean(this._hasMore || this._result.length);\n    }\n  }, {\n    key: 'each',\n    value: function each(fn, cb) {\n      var _this5 = this;\n\n      var _connection$promisify4 = this._connection.promisify(cb),\n          promise = _connection$promisify4.promise,\n          callback = _connection$promisify4.callback;\n\n      var index = 0;\n      var loop = function loop() {\n        try {\n          var result = void 0;\n          while (_this5._result.length) {\n            result = fn(_this5._result.shift(), index, _this5);\n            index++;\n            if (result === false) break;\n          }\n          if (!_this5._hasMore || result === false) callback(null, result);else {\n            _this5._more(function (err) {\n              return err ? callback(err) : loop();\n            });\n          }\n        } catch (e) {\n          callback(e);\n        }\n      };\n      loop();\n      return promise;\n    }\n  }, {\n    key: 'every',\n    value: function every(fn, cb) {\n      var _this6 = this;\n\n      var _connection$promisify5 = this._connection.promisify(cb),\n          promise = _connection$promisify5.promise,\n          callback = _connection$promisify5.callback;\n\n      var index = 0;\n      var loop = function loop() {\n        try {\n          var result = true;\n          while (_this6._result.length) {\n            result = fn(_this6._result.shift(), index, _this6);\n            index++;\n            if (!result) break;\n          }\n          if (!_this6._hasMore || !result) callback(null, Boolean(result));else {\n            _this6._more(function (err) {\n              return err ? callback(err) : loop();\n            });\n          }\n        } catch (e) {\n          callback(e);\n        }\n      };\n      loop();\n      return promise;\n    }\n  }, {\n    key: 'some',\n    value: function some(fn, cb) {\n      var _this7 = this;\n\n      var _connection$promisify6 = this._connection.promisify(cb),\n          promise = _connection$promisify6.promise,\n          callback = _connection$promisify6.callback;\n\n      var index = 0;\n      var loop = function loop() {\n        try {\n          var result = false;\n          while (_this7._result.length) {\n            result = fn(_this7._result.shift(), index, _this7);\n            index++;\n            if (result) break;\n          }\n          if (!_this7._hasMore || result) callback(null, Boolean(result));else {\n            _this7._more(function (err) {\n              return err ? callback(err) : loop();\n            });\n          }\n        } catch (e) {\n          callback(e);\n        }\n      };\n      loop();\n      return promise;\n    }\n  }, {\n    key: 'map',\n    value: function map(fn, cb) {\n      var _this8 = this;\n\n      var _connection$promisify7 = this._connection.promisify(cb),\n          promise = _connection$promisify7.promise,\n          callback = _connection$promisify7.callback;\n\n      var index = 0;\n      var result = [];\n      var loop = function loop() {\n        try {\n          while (_this8._result.length) {\n            result.push(fn(_this8._result.shift(), index, _this8));\n            index++;\n          }\n          if (!_this8._hasMore) callback(null, result);else {\n            _this8._more(function (err) {\n              return err ? callback(err) : loop();\n            });\n          }\n        } catch (e) {\n          callback(e);\n        }\n      };\n      loop();\n      return promise;\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn, accu, cb) {\n      var _this9 = this;\n\n      if (typeof accu === 'function') {\n        cb = accu;\n        accu = undefined;\n      }\n      var index = 0;\n\n      var _connection$promisify8 = this._connection.promisify(cb),\n          promise = _connection$promisify8.promise,\n          callback = _connection$promisify8.callback;\n\n      var loop = function loop() {\n        try {\n          while (_this9._result.length) {\n            accu = fn(accu, _this9._result.shift(), index, _this9);\n            index++;\n          }\n          if (!_this9._hasMore) callback(null, accu);else {\n            _this9._more(function (err) {\n              return err ? callback(err) : loop();\n            });\n          }\n        } catch (e) {\n          callback(e);\n        }\n      };\n      if (accu !== undefined) {\n        loop();\n      } else if (this._result.length > 1) {\n        accu = this._result.shift();\n        index = 1;\n        loop();\n      } else {\n        this._more(function (err) {\n          if (err) callback(err);else {\n            accu = _this9._result.shift();\n            index = 1;\n            loop();\n          }\n        });\n      }\n      return promise;\n    }\n  }]);\n\n  return ArrayCursor;\n}();\n\nexports.default = ArrayCursor;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/graph.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EdgeCollection = exports.VertexCollection = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _collection = require('./collection');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GraphVertexCollection = function (_BaseCollection) {\n  _inherits(GraphVertexCollection, _BaseCollection);\n\n  function GraphVertexCollection(connection, name, graph) {\n    _classCallCheck(this, GraphVertexCollection);\n\n    var _this = _possibleConstructorReturn(this, (GraphVertexCollection.__proto__ || Object.getPrototypeOf(GraphVertexCollection)).call(this, connection, name));\n\n    _this.type = _collection._types.DOCUMENT_COLLECTION;\n    _this.graph = graph;\n    _this._gharial = _this._api.route('/gharial/' + _this.graph.name + '/vertex');\n    return _this;\n  }\n\n  _createClass(GraphVertexCollection, [{\n    key: '_documentPath',\n    value: function _documentPath(documentHandle) {\n      return '/document/' + this._documentHandle(documentHandle);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(documentHandle, cb) {\n      var _connection$promisify = this._connection.promisify(cb),\n          promise = _connection$promisify.promise,\n          callback = _connection$promisify.callback;\n\n      this._gharial.delete('/' + this._documentHandle(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'vertex',\n    value: function vertex(documentHandle, cb) {\n      var _connection$promisify2 = this._connection.promisify(cb),\n          promise = _connection$promisify2.promise,\n          callback = _connection$promisify2.callback;\n\n      this._gharial.get('/' + this._documentHandle(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'save',\n    value: function save(data, cb) {\n      var _connection$promisify3 = this._connection.promisify(cb),\n          promise = _connection$promisify3.promise,\n          callback = _connection$promisify3.callback;\n\n      this._gharial.post(this.name, data, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }]);\n\n  return GraphVertexCollection;\n}(_collection._BaseCollection);\n\nvar GraphEdgeCollection = function (_EdgeCollection) {\n  _inherits(GraphEdgeCollection, _EdgeCollection);\n\n  function GraphEdgeCollection(connection, name, graph) {\n    _classCallCheck(this, GraphEdgeCollection);\n\n    var _this2 = _possibleConstructorReturn(this, (GraphEdgeCollection.__proto__ || Object.getPrototypeOf(GraphEdgeCollection)).call(this, connection, name));\n\n    _this2.type = _collection._types.EDGE_COLLECTION;\n    _this2.graph = graph;\n    _this2._gharial = _this2._api.route('/gharial/' + _this2.graph.name + '/edge');\n    return _this2;\n  }\n\n  _createClass(GraphEdgeCollection, [{\n    key: 'remove',\n    value: function remove(documentHandle, cb) {\n      var _connection$promisify4 = this._connection.promisify(cb),\n          promise = _connection$promisify4.promise,\n          callback = _connection$promisify4.callback;\n\n      this._gharial.delete('/' + this._documentHandle(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'edge',\n    value: function edge(documentHandle, cb) {\n      var _connection$promisify5 = this._connection.promisify(cb),\n          promise = _connection$promisify5.promise,\n          callback = _connection$promisify5.callback;\n\n      this._gharial.get('/' + this._documentHandle(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'save',\n    value: function save(data, fromId, toId, cb) {\n      if (typeof fromId === 'function') {\n        cb = fromId;\n        fromId = undefined;\n      } else if (fromId) {\n        data._from = this._documentHandle(fromId);\n        data._to = this._documentHandle(toId);\n      }\n\n      var _connection$promisify6 = this._connection.promisify(cb),\n          promise = _connection$promisify6.promise,\n          callback = _connection$promisify6.callback;\n\n      this._gharial.post(this.name, data, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }]);\n\n  return GraphEdgeCollection;\n}(_collection.EdgeCollection);\n\nvar Graph = function () {\n  function Graph(connection, name) {\n    _classCallCheck(this, Graph);\n\n    this.name = name;\n    this._connection = connection;\n    this._api = this._connection.route('/_api');\n    this._gharial = this._api.route('/gharial/' + this.name);\n  }\n\n  _createClass(Graph, [{\n    key: 'get',\n    value: function get(cb) {\n      var _connection$promisify7 = this._connection.promisify(cb),\n          promise = _connection$promisify7.promise,\n          callback = _connection$promisify7.callback;\n\n      this._gharial.get(function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'create',\n    value: function create(properties, cb) {\n      if (typeof properties === 'function') {\n        cb = properties;\n        properties = undefined;\n      }\n\n      var _connection$promisify8 = this._connection.promisify(cb),\n          promise = _connection$promisify8.promise,\n          callback = _connection$promisify8.callback;\n\n      this._api.post('/gharial', _extends({}, properties, { name: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'drop',\n    value: function drop(dropCollections, cb) {\n      if (typeof dropCollections === 'function') {\n        cb = dropCollections;\n        dropCollections = undefined;\n      }\n      if (typeof dropCollections !== 'boolean') dropCollections = false;\n\n      var _connection$promisify9 = this._connection.promisify(cb),\n          promise = _connection$promisify9.promise,\n          callback = _connection$promisify9.callback;\n\n      this._gharial.delete({ dropCollections: dropCollections }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'vertexCollection',\n    value: function vertexCollection(collectionName) {\n      return new GraphVertexCollection(this._connection, collectionName, this);\n    }\n  }, {\n    key: 'addVertexCollection',\n    value: function addVertexCollection(collectionName, cb) {\n      var _connection$promisify10 = this._connection.promisify(cb),\n          promise = _connection$promisify10.promise,\n          callback = _connection$promisify10.callback;\n\n      this._gharial.post('/vertex', { collection: collectionName }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'removeVertexCollection',\n    value: function removeVertexCollection(collectionName, dropCollection, cb) {\n      if (typeof dropCollection === 'function') {\n        cb = dropCollection;\n        dropCollection = undefined;\n      }\n\n      var _connection$promisify11 = this._connection.promisify(cb),\n          promise = _connection$promisify11.promise,\n          callback = _connection$promisify11.callback;\n\n      if (typeof dropCollection !== 'boolean') dropCollection = false;\n      this._gharial.delete('/vertex/' + collectionName, { dropCollection: dropCollection }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'edgeCollection',\n    value: function edgeCollection(collectionName) {\n      return new GraphEdgeCollection(this._connection, collectionName, this);\n    }\n  }, {\n    key: 'addEdgeDefinition',\n    value: function addEdgeDefinition(definition, cb) {\n      var _connection$promisify12 = this._connection.promisify(cb),\n          promise = _connection$promisify12.promise,\n          callback = _connection$promisify12.callback;\n\n      this._gharial.post('/edge', definition, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'replaceEdgeDefinition',\n    value: function replaceEdgeDefinition(definitionName, definition, cb) {\n      var _connection$promisify13 = this._connection.promisify(cb),\n          promise = _connection$promisify13.promise,\n          callback = _connection$promisify13.callback;\n\n      this._gharial.put('/edge/' + definitionName, definition, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'removeEdgeDefinition',\n    value: function removeEdgeDefinition(definitionName, dropCollection, cb) {\n      if (typeof dropCollection === 'function') {\n        cb = dropCollection;\n        dropCollection = undefined;\n      }\n\n      var _connection$promisify14 = this._connection.promisify(cb),\n          promise = _connection$promisify14.promise,\n          callback = _connection$promisify14.callback;\n\n      if (typeof dropCollection !== 'boolean') dropCollection = false;\n      this._gharial.delete('edge/' + definitionName, { dropCollection: dropCollection }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.graph);\n      });\n      return promise;\n    }\n  }, {\n    key: 'traversal',\n    value: function traversal(startVertex, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify15 = this._connection.promisify(cb),\n          promise = _connection$promisify15.promise,\n          callback = _connection$promisify15.callback;\n\n      this._api.post('/traversal', _extends({}, opts, { startVertex: startVertex, graphName: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }]);\n\n  return Graph;\n}();\n\nexports.default = Graph;\nexports.VertexCollection = GraphVertexCollection;\nexports.EdgeCollection = GraphEdgeCollection;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/collection.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._types = exports._BaseCollection = exports.DocumentCollection = exports.EdgeCollection = exports.types = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = construct;\n\nvar _cursor = require('./cursor');\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar types = exports.types = {\n  DOCUMENT_COLLECTION: 2,\n  EDGE_COLLECTION: 3\n};\n\nvar BaseCollection = function () {\n  function BaseCollection(connection, name) {\n    _classCallCheck(this, BaseCollection);\n\n    this.name = name;\n    this._urlPrefix = '/collection/' + name + '/';\n    this._idPrefix = name + '/';\n    this._connection = connection;\n    this._api = this._connection.route('/_api');\n    if (this._connection.arangoMajor >= 3) {\n      this.first = undefined;\n      this.last = undefined;\n      this.createCapConstraint = undefined;\n    }\n  }\n\n  _createClass(BaseCollection, [{\n    key: '_documentHandle',\n    value: function _documentHandle(documentHandle) {\n      if (typeof documentHandle !== 'string') {\n        if (documentHandle._id) {\n          return documentHandle._id;\n        }\n        if (documentHandle._key) {\n          return this._idPrefix + documentHandle._key;\n        }\n        throw new Error('Document handle must be a document or string');\n      }\n      if (documentHandle.indexOf('/') === -1) {\n        return this._idPrefix + documentHandle;\n      }\n      return documentHandle;\n    }\n  }, {\n    key: '_indexHandle',\n    value: function _indexHandle(indexHandle) {\n      if (typeof indexHandle !== 'string') {\n        if (indexHandle.id) {\n          return indexHandle.id;\n        }\n        throw new Error('Document handle must be a document or string');\n      }\n      if (indexHandle.indexOf('/') === -1) {\n        return this._idPrefix + indexHandle;\n      }\n      return indexHandle;\n    }\n  }, {\n    key: '_get',\n    value: function _get(path, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify = this._connection.promisify(cb),\n          promise = _connection$promisify.promise,\n          callback = _connection$promisify.callback;\n\n      this._api.get(this._urlPrefix + path, opts, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: '_put',\n    value: function _put(path, data, cb) {\n      var _connection$promisify2 = this._connection.promisify(cb),\n          promise = _connection$promisify2.promise,\n          callback = _connection$promisify2.callback;\n\n      this._api.put(this._urlPrefix + path, data, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'get',\n    value: function get(cb) {\n      var _connection$promisify3 = this._connection.promisify(cb),\n          promise = _connection$promisify3.promise,\n          callback = _connection$promisify3.callback;\n\n      this._api.get('/collection/' + this.name, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'create',\n    value: function create(properties, cb) {\n      if (typeof properties === 'function') {\n        cb = properties;\n        properties = undefined;\n      }\n\n      var _connection$promisify4 = this._connection.promisify(cb),\n          promise = _connection$promisify4.promise,\n          callback = _connection$promisify4.callback;\n\n      this._api.post('/collection', _extends({}, properties, { name: this.name, type: this.type }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'properties',\n    value: function properties(cb) {\n      return this._get('properties', cb);\n    }\n  }, {\n    key: 'count',\n    value: function count(cb) {\n      return this._get('count', cb);\n    }\n  }, {\n    key: 'figures',\n    value: function figures(cb) {\n      return this._get('figures', cb);\n    }\n  }, {\n    key: 'revision',\n    value: function revision(cb) {\n      return this._get('revision', cb);\n    }\n  }, {\n    key: 'checksum',\n    value: function checksum(opts, cb) {\n      return this._get('checksum', opts, cb);\n    }\n  }, {\n    key: 'load',\n    value: function load(count, cb) {\n      if (typeof count === 'function') {\n        cb = count;\n        count = undefined;\n      }\n      return this._put('load', typeof count === 'boolean' ? { count: count } : undefined, cb);\n    }\n  }, {\n    key: 'unload',\n    value: function unload(cb) {\n      return this._put('unload', undefined, cb);\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(properties, cb) {\n      return this._put('properties', properties, cb);\n    }\n  }, {\n    key: 'rename',\n    value: function rename(name, cb) {\n      var _this = this;\n\n      var _connection$promisify5 = this._connection.promisify(cb),\n          promise = _connection$promisify5.promise,\n          callback = _connection$promisify5.callback;\n\n      this._api.put(this._urlPrefix + 'rename', { name: name }, function (err, res) {\n        if (err) callback(err);else {\n          _this.name = name;\n          _this._idPrefix = name + '/';\n          _this._urlPrefix = '/collection/' + name + '/';\n          callback(null, res.body);\n        }\n      });\n      return promise;\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate(cb) {\n      return this._put('rotate', undefined, cb);\n    }\n  }, {\n    key: 'truncate',\n    value: function truncate(cb) {\n      return this._put('truncate', undefined, cb);\n    }\n  }, {\n    key: 'drop',\n    value: function drop(opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify6 = this._connection.promisify(cb),\n          promise = _connection$promisify6.promise,\n          callback = _connection$promisify6.callback;\n\n      this._api.delete('/collection/' + this.name, opts, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'replace',\n    value: function replace(documentHandle, newValue, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'string') {\n        opts = { rev: opts };\n      }\n\n      var _connection$promisify7 = this._connection.promisify(cb),\n          promise = _connection$promisify7.promise,\n          callback = _connection$promisify7.callback;\n\n      var rev = opts && opts.rev;\n      var headers = rev && this._connection.arangoMajor >= 3 ? { 'if-match': rev } : undefined;\n      this._api.put(this._documentPath(documentHandle), newValue, opts, headers, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'update',\n    value: function update(documentHandle, newValue, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'string') {\n        opts = { rev: opts };\n      }\n\n      var _connection$promisify8 = this._connection.promisify(cb),\n          promise = _connection$promisify8.promise,\n          callback = _connection$promisify8.callback;\n\n      var rev = opts && opts.rev;\n      var headers = rev && this._connection.arangoMajor >= 3 ? { 'if-match': rev } : undefined;\n      this._api.patch(this._documentPath(documentHandle), newValue, opts, headers, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'bulkUpdate',\n    value: function bulkUpdate(newValues, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'string') {\n        opts = { rev: opts };\n      }\n\n      var _connection$promisify9 = this._connection.promisify(cb),\n          promise = _connection$promisify9.promise,\n          callback = _connection$promisify9.callback;\n\n      this._api.patch('/document/' + this.name, newValues, opts, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(documentHandle, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'string') {\n        opts = { rev: opts };\n      }\n\n      var _connection$promisify10 = this._connection.promisify(cb),\n          promise = _connection$promisify10.promise,\n          callback = _connection$promisify10.callback;\n\n      var rev = opts && opts.rev;\n      var headers = rev && this._connection.arangoMajor >= 3 ? { 'if-match': rev } : undefined;\n      this._api.delete(this._documentPath(documentHandle), opts, headers, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'list',\n    value: function list(type, cb) {\n      if (typeof type === 'function') {\n        cb = type;\n        type = undefined;\n      }\n      if (!type) type = 'id';\n\n      var _connection$promisify11 = this._connection.promisify(cb),\n          promise = _connection$promisify11.promise,\n          callback = _connection$promisify11.callback;\n\n      if (this._connection.arangoMajor < 3) {\n        this._api.get('/document', { type: type, collection: this.name }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body.documents);\n        });\n      } else {\n        this._api.put('/simple/all-keys', { type: type, collection: this.name }, function (err, res) {\n          return err ? callback(err) : callback(res.body.result);\n        });\n      }\n      return promise;\n    }\n  }, {\n    key: 'all',\n    value: function all(opts, cb) {\n      var _this2 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify12 = this._connection.promisify(cb),\n          promise = _connection$promisify12.promise,\n          callback = _connection$promisify12.callback;\n\n      this._api.put('/simple/all', _extends({}, opts, { collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, new _cursor2.default(_this2._connection, res.body));\n      });\n      return promise;\n    }\n  }, {\n    key: 'any',\n    value: function any(cb) {\n      var _connection$promisify13 = this._connection.promisify(cb),\n          promise = _connection$promisify13.promise,\n          callback = _connection$promisify13.callback;\n\n      this._api.put('/simple/any', { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.document);\n      });\n      return promise;\n    }\n  }, {\n    key: 'first',\n    value: function first(opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'number') {\n        opts = { count: opts };\n      }\n\n      var _connection$promisify14 = this._connection.promisify(cb),\n          promise = _connection$promisify14.promise,\n          callback = _connection$promisify14.callback;\n\n      this._api.put('/simple/first', _extends({}, opts, { collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'last',\n    value: function last(opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'number') {\n        opts = { count: opts };\n      }\n\n      var _connection$promisify15 = this._connection.promisify(cb),\n          promise = _connection$promisify15.promise,\n          callback = _connection$promisify15.callback;\n\n      this._api.put('/simple/last', _extends({}, opts, { collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }, {\n    key: 'byExample',\n    value: function byExample(example, opts, cb) {\n      var _this3 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify16 = this._connection.promisify(cb),\n          promise = _connection$promisify16.promise,\n          callback = _connection$promisify16.callback;\n\n      this._api.put('/simple/by-example', _extends({}, opts, { example: example, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, new _cursor2.default(_this3._connection, res.body));\n      });\n      return promise;\n    }\n  }, {\n    key: 'firstExample',\n    value: function firstExample(example, cb) {\n      var _connection$promisify17 = this._connection.promisify(cb),\n          promise = _connection$promisify17.promise,\n          callback = _connection$promisify17.callback;\n\n      this._api.put('/simple/first-example', { example: example, collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.document);\n      });\n      return promise;\n    }\n  }, {\n    key: 'removeByExample',\n    value: function removeByExample(example, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify18 = this._connection.promisify(cb),\n          promise = _connection$promisify18.promise,\n          callback = _connection$promisify18.callback;\n\n      this._api.put('/simple/remove-by-example', _extends({}, opts, { example: example, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'replaceByExample',\n    value: function replaceByExample(example, newValue, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify19 = this._connection.promisify(cb),\n          promise = _connection$promisify19.promise,\n          callback = _connection$promisify19.callback;\n\n      this._api.put('/simple/replace-by-example', _extends({}, opts, { example: example, newValue: newValue, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'updateByExample',\n    value: function updateByExample(example, newValue, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify20 = this._connection.promisify(cb),\n          promise = _connection$promisify20.promise,\n          callback = _connection$promisify20.callback;\n\n      this._api.put('/simple/update-by-example', _extends({}, opts, { example: example, newValue: newValue, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'lookupByKeys',\n    value: function lookupByKeys(keys, cb) {\n      var _connection$promisify21 = this._connection.promisify(cb),\n          promise = _connection$promisify21.promise,\n          callback = _connection$promisify21.callback;\n\n      this._api.put('/simple/lookup-by-keys', { keys: keys, collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.documents);\n      });\n      return promise;\n    }\n  }, {\n    key: 'removeByKeys',\n    value: function removeByKeys(keys, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify22 = this._connection.promisify(cb),\n          promise = _connection$promisify22.promise,\n          callback = _connection$promisify22.callback;\n\n      this._api.put('/simple/remove-by-keys', _extends({}, opts, { keys: keys, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'import',\n    value: function _import(data, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify23 = this._connection.promisify(cb),\n          promise = _connection$promisify23.promise,\n          callback = _connection$promisify23.callback;\n\n      this._api.request({\n        method: 'POST',\n        path: '/import',\n        body: data,\n        ld: Boolean(!opts || opts.type !== 'array'),\n        qs: _extends({ type: 'auto' }, opts, { collection: this.name })\n      }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'indexes',\n    value: function indexes(cb) {\n      var _connection$promisify24 = this._connection.promisify(cb),\n          promise = _connection$promisify24.promise,\n          callback = _connection$promisify24.callback;\n\n      this._api.get('/index', { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.indexes);\n      });\n      return promise;\n    }\n  }, {\n    key: 'index',\n    value: function index(indexHandle, cb) {\n      var _connection$promisify25 = this._connection.promisify(cb),\n          promise = _connection$promisify25.promise,\n          callback = _connection$promisify25.callback;\n\n      this._api.get('/index/' + this._indexHandle(indexHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createIndex',\n    value: function createIndex(details, cb) {\n      var _connection$promisify26 = this._connection.promisify(cb),\n          promise = _connection$promisify26.promise,\n          callback = _connection$promisify26.callback;\n\n      this._api.post('/index', details, { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'dropIndex',\n    value: function dropIndex(indexHandle, cb) {\n      var _connection$promisify27 = this._connection.promisify(cb),\n          promise = _connection$promisify27.promise,\n          callback = _connection$promisify27.callback;\n\n      this._api.delete('/index/' + this._indexHandle(indexHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createCapConstraint',\n    value: function createCapConstraint(size, cb) {\n      if (typeof size === 'number') {\n        size = { size: size };\n      }\n\n      var _connection$promisify28 = this._connection.promisify(cb),\n          promise = _connection$promisify28.promise,\n          callback = _connection$promisify28.callback;\n\n      this._api.post('/index', _extends({}, size, { type: 'cap' }), { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createHashIndex',\n    value: function createHashIndex(fields, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof fields === 'string') {\n        fields = [fields];\n      }\n      if (typeof opts === 'boolean') {\n        opts = { unique: opts };\n      }\n\n      var _connection$promisify29 = this._connection.promisify(cb),\n          promise = _connection$promisify29.promise,\n          callback = _connection$promisify29.callback;\n\n      this._api.post('/index', _extends({ unique: false }, opts, { type: 'hash', fields: fields }), { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createSkipList',\n    value: function createSkipList(fields, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof fields === 'string') {\n        fields = [fields];\n      }\n      if (typeof opts === 'boolean') {\n        opts = { unique: opts };\n      }\n\n      var _connection$promisify30 = this._connection.promisify(cb),\n          promise = _connection$promisify30.promise,\n          callback = _connection$promisify30.callback;\n\n      this._api.post('/index', _extends({ unique: false }, opts, { type: 'skiplist', fields: fields }), { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createPersistentIndex',\n    value: function createPersistentIndex(fields, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof fields === 'string') {\n        fields = [fields];\n      }\n      if (typeof opts === 'boolean') {\n        opts = { unique: opts };\n      }\n\n      var _connection$promisify31 = this._connection.promisify(cb),\n          promise = _connection$promisify31.promise,\n          callback = _connection$promisify31.callback;\n\n      this._api.post('/index', _extends({ unique: false }, opts, { type: 'persistent', fields: fields }), { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createGeoIndex',\n    value: function createGeoIndex(fields, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof fields === 'string') {\n        fields = [fields];\n      }\n\n      var _connection$promisify32 = this._connection.promisify(cb),\n          promise = _connection$promisify32.promise,\n          callback = _connection$promisify32.callback;\n\n      this._api.post('/index', _extends({}, opts, { fields: fields, type: 'geo' }), { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'createFulltextIndex',\n    value: function createFulltextIndex(fields, minLength, cb) {\n      if (typeof minLength === 'function') {\n        cb = minLength;\n        minLength = undefined;\n      }\n      if (typeof fields === 'string') {\n        fields = [fields];\n      }\n      if (minLength) minLength = Number(minLength);\n\n      var _connection$promisify33 = this._connection.promisify(cb),\n          promise = _connection$promisify33.promise,\n          callback = _connection$promisify33.callback;\n\n      this._api.post('/index', { fields: fields, minLength: minLength, type: 'fulltext' }, { collection: this.name }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'fulltext',\n    value: function fulltext(attribute, query, opts, cb) {\n      var _this4 = this;\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (!opts) opts = {};\n      if (opts.index) opts.index = this._indexHandle(opts.index);\n\n      var _connection$promisify34 = this._connection.promisify(cb),\n          promise = _connection$promisify34.promise,\n          callback = _connection$promisify34.callback;\n\n      this._api.put('/simple/fulltext', _extends({}, opts, { attribute: attribute, query: query, collection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, new _cursor2.default(_this4._connection, res.body));\n      });\n      return promise;\n    }\n  }]);\n\n  return BaseCollection;\n}();\n\nBaseCollection.prototype.isArangoCollection = true;\n\nvar DocumentCollection = function (_BaseCollection) {\n  _inherits(DocumentCollection, _BaseCollection);\n\n  function DocumentCollection() {\n    var _ref;\n\n    _classCallCheck(this, DocumentCollection);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this5 = _possibleConstructorReturn(this, (_ref = DocumentCollection.__proto__ || Object.getPrototypeOf(DocumentCollection)).call.apply(_ref, [this].concat(args)));\n\n    _this5.type = types.DOCUMENT_COLLECTION;\n    return _this5;\n  }\n\n  _createClass(DocumentCollection, [{\n    key: '_documentPath',\n    value: function _documentPath(documentHandle) {\n      return '/document/' + this._documentHandle(documentHandle);\n    }\n  }, {\n    key: 'document',\n    value: function document(documentHandle, cb) {\n      var _connection$promisify35 = this._connection.promisify(cb),\n          promise = _connection$promisify35.promise,\n          callback = _connection$promisify35.callback;\n\n      this._api.get(this._documentPath(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'save',\n    value: function save(data, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n      if (typeof opts === 'boolean') {\n        opts = { returnNew: opts };\n      }\n\n      var _connection$promisify36 = this._connection.promisify(cb),\n          promise = _connection$promisify36.promise,\n          callback = _connection$promisify36.callback;\n\n      if (this._connection.arangoMajor >= 3) {\n        this._api.post('/document/' + this.name, data, opts, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      } else {\n        if (!opts) opts = {};\n        opts.collection = this.name;\n\n        this._api.post('/document', data, opts, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      }\n      return promise;\n    }\n  }]);\n\n  return DocumentCollection;\n}(BaseCollection);\n\nvar EdgeCollection = function (_BaseCollection2) {\n  _inherits(EdgeCollection, _BaseCollection2);\n\n  function EdgeCollection() {\n    var _ref2;\n\n    _classCallCheck(this, EdgeCollection);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _this6 = _possibleConstructorReturn(this, (_ref2 = EdgeCollection.__proto__ || Object.getPrototypeOf(EdgeCollection)).call.apply(_ref2, [this].concat(args)));\n\n    _this6.type = types.EDGE_COLLECTION;\n    return _this6;\n  }\n\n  _createClass(EdgeCollection, [{\n    key: '_documentPath',\n    value: function _documentPath(documentHandle) {\n      if (this._connection.arangoMajor < 3) {\n        return 'edge/' + this._documentHandle(documentHandle);\n      }\n      return 'document/' + this._documentHandle(documentHandle);\n    }\n  }, {\n    key: 'edge',\n    value: function edge(documentHandle, cb) {\n      var _connection$promisify37 = this._connection.promisify(cb),\n          promise = _connection$promisify37.promise,\n          callback = _connection$promisify37.callback;\n\n      this._api.get(this._documentPath(documentHandle), function (err, res) {\n        return err ? callback(err) : callback(null, res.body);\n      });\n      return promise;\n    }\n  }, {\n    key: 'save',\n    value: function save(data, fromId, toId, cb) {\n      if (typeof fromId === 'function') {\n        cb = fromId;\n        fromId = undefined;\n      } else if (fromId) {\n        data._from = this._documentHandle(fromId);\n        data._to = this._documentHandle(toId);\n      }\n\n      var _connection$promisify38 = this._connection.promisify(cb),\n          promise = _connection$promisify38.promise,\n          callback = _connection$promisify38.callback;\n\n      if (this._connection.arangoMajor < 3) {\n        this._api.post('/edge', data, {\n          collection: this.name,\n          from: data._from,\n          to: data._to\n        }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      } else {\n        this._api.post('/document', data, { collection: this.name }, function (err, res) {\n          return err ? callback(err) : callback(null, res.body);\n        });\n      }\n      return promise;\n    }\n  }, {\n    key: '_edges',\n    value: function _edges(documentHandle, direction, cb) {\n      var _connection$promisify39 = this._connection.promisify(cb),\n          promise = _connection$promisify39.promise,\n          callback = _connection$promisify39.callback;\n\n      this._api.get('/edges/' + this.name, { direction: direction, vertex: this._documentHandle(documentHandle) }, function (err, res) {\n        return err ? callback(err) : callback(null, res.body.edges);\n      });\n      return promise;\n    }\n  }, {\n    key: 'edges',\n    value: function edges(vertex, cb) {\n      return this._edges(vertex, undefined, cb);\n    }\n  }, {\n    key: 'inEdges',\n    value: function inEdges(vertex, cb) {\n      return this._edges(vertex, 'in', cb);\n    }\n  }, {\n    key: 'outEdges',\n    value: function outEdges(vertex, cb) {\n      return this._edges(vertex, 'out', cb);\n    }\n  }, {\n    key: 'traversal',\n    value: function traversal(startVertex, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = undefined;\n      }\n\n      var _connection$promisify40 = this._connection.promisify(cb),\n          promise = _connection$promisify40.promise,\n          callback = _connection$promisify40.callback;\n\n      this._api.post('/traversal', _extends({}, opts, { startVertex: startVertex, edgeCollection: this.name }), function (err, res) {\n        return err ? callback(err) : callback(null, res.body.result);\n      });\n      return promise;\n    }\n  }]);\n\n  return EdgeCollection;\n}(BaseCollection);\n\nfunction construct(connection, body) {\n  var Collection = body.type === types.EDGE_COLLECTION ? EdgeCollection : DocumentCollection;\n  return new Collection(connection, body.name);\n}\n\nexports.EdgeCollection = EdgeCollection;\nexports.DocumentCollection = DocumentCollection;\nexports._BaseCollection = BaseCollection;\nexports._types = types;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/aql-query.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = aql;\nfunction aql(strings) {\n  var bindVars = {};\n  var bindVals = [];\n  var query = strings[0];\n\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var rawValue = args[i];\n    var value = rawValue;\n    if (rawValue && typeof rawValue.toAQL === 'function') {\n      query += '' + rawValue.toAQL() + strings[i + 1];\n      continue;\n    }\n    var index = bindVals.indexOf(rawValue);\n    var isKnown = index !== -1;\n    var name = 'value' + (isKnown ? index : bindVals.length);\n    if (rawValue && rawValue.isArangoCollection) {\n      name = '@' + name;\n      value = rawValue.name;\n    }\n    if (!isKnown) {\n      bindVals.push(rawValue);\n      bindVars[name] = value;\n    }\n    query += '@' + name + strings[i + 1];\n  }\n  return { query: query, bindVars: bindVars };\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/btoa.web.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = window.btoa;","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/bytelength.web.js":"'use strict';\n\nmodule.exports = require('utf8-length');","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/multipart.web.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = toForm;\nfunction toForm(fields, callback) {\n  var form = void 0;\n  try {\n    form = new global.FormData();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(fields)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        var value = fields[key];\n        if (value === undefined) continue;\n        if (!(value instanceof global.File) && ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'function')) {\n          value = JSON.stringify(value);\n        }\n        form.append(key, value);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback(null, { body: form });\n}","/home/travis/build/npmtest/node-npmtest-arangojs/node_modules/arangojs/lib/util/request.web.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (baseUrl, options) {\n  if (!options) options = {};\n  var baseUrlParts = (0, _url.parse)(baseUrl);\n\n  var queue = [];\n  var maxTasks = typeof options.maxSockets === 'number' ? options.maxSockets * 2 : Infinity;\n  var activeTasks = 0;\n\n  function drainQueue() {\n    if (!queue.length || activeTasks >= maxTasks) return;\n    var task = queue.shift();\n    activeTasks += 1;\n    task(function () {\n      activeTasks -= 1;\n      drainQueue();\n    });\n  }\n\n  function request(_ref, cb) {\n    var method = _ref.method,\n        url = _ref.url,\n        headers = _ref.headers,\n        body = _ref.body,\n        expectBinary = _ref.expectBinary;\n\n    var urlParts = _extends({}, baseUrlParts, {\n      pathname: url.pathname ? baseUrlParts.pathname ? joinPath(baseUrlParts.pathname, url.pathname) : url.pathname : baseUrlParts.pathname,\n      search: url.search ? baseUrlParts.search ? baseUrlParts.search + '&' + url.search.slice(1) : url.search : baseUrlParts.search\n    });\n\n    queue.push(function (next) {\n      var _callback = function callback(err, res) {\n        _callback = function callback() {\n          return undefined;\n        };\n        next();\n        cb(err, res);\n      };\n      var req = (0, _xhr2.default)(_extends({\n        responseType: expectBinary ? 'blob' : 'text'\n      }, options, {\n        url: (0, _url.format)(urlParts),\n        withCredentials: true,\n        useXDR: true,\n        body: body,\n        method: method,\n        headers: headers\n      }), function (err, res) {\n        if (!err) _callback(null, res);else {\n          err.request = req;\n          _callback(err);\n        }\n      });\n    });\n\n    drainQueue();\n  }\n\n  var auth = baseUrlParts.auth;\n  delete baseUrlParts.auth;\n  return { request: request, auth: auth, url: baseUrlParts };\n};\n\nvar _xhr = require('xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _url = require('url');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction joinPath() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!a && !b) return '';\n  var leadingSlash = a.charAt(0) === '/';\n  var trailingSlash = b.charAt(b.length - 1) === '/';\n  var tokens = (a + '/' + b).split('/').filter(Boolean);\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    if (token === '..') {\n      tokens.splice(i - 1, 2);\n      i--;\n    } else if (token === '.') {\n      tokens.splice(i, 1);\n      i--;\n    }\n  }\n  var path = tokens.join('/');\n  if (leadingSlash) path = '/' + path;\n  if (trailingSlash) path = path + '/';\n  return path;\n}"}